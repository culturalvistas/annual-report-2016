//===== LAYOUT =====

//Maps - Breakpoints
$breakpoints: (
	'sm'	: 320px,
	'md'	: 880px,
	'lg'	: 1024px,
	'xl'	: 1440px
);

//Mixins - Breakpoints
@mixin respond-from($breakpoint){  //for min-width
	$value: map-get($breakpoints, $breakpoint);
	@if $value != null {
		@media (min-width: $value) {
			@content;
		}
	}
	@else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
			+ "Please make sure it is defined in `$breakpoints` map.";
	}
}
@mixin respond-to($breakpoint){  //for max-width
	$value: map-get($breakpoints, $breakpoint);
	@if $value != null {
		@media (max-width: ($value - 1px)) {
			@content;
		}
	}
	@else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
			+ "Please make sure it is defined in `$breakpoints` map.";
	}
}

//Remember to @include mixin in style.scss
@mixin layout {
	html {
		height: 100%;
		height: 100vh;
		width: 100%;
	}
	body {
		height: 100%;
		height: 100vh;
		width: 100%;
		min-width: 320px;
	}
	.full-width {  //full width without margins
		width: 100%;
		max-width: none;
	}
	.base-side-margins {  //site margins (usually for sections)
		width: 1140px;	//based on cv website
  	max-width: 94vw;	//based on cv website
		min-width: 300.8px;	//magic number, correlates with body min-width
		margin: auto;
	}
	.base-side-padding {
		//@extend .flex;
		
		@include respond-to(md) {
			padding-left: 20px;
      padding-right: 20px;
		}
		@include respond-from(md) {
			padding-left: 90px;
      padding-right: 90px;
		}
		@include respond-from(lg) {
			padding-left: 110px;
      padding-right: 110px;
		}
	}
  section {
    @extend .base-side-margins;
		padding-top: 40px;
		padding-bottom: 40px;
  }
	.flex {  //flexbox
		display: -webkit-flex;
		display: -ms-flexbox;
		display: flex;
		-webkit-justify-content: space-between;
		-ms-flex-pack: justify;
		justify-content: space-between;
	}
	.flex-row {
		@extend .flex;
		flex-direction: row;
		justify-content: space-between;
		
		@include respond-to(md) {
			display:block;
		}
	}
	.flex-column {
		@extend .flex;
		flex-direction: column;
		justify-content: center;
		
		@include respond-to(md) {
			display: block;
		}
	}
	.column-2 {
		@include respond-from(md) {
			width: 46.5%;
		}
	}
	.column-3 {
		@include respond-from(md) {
			width: 30.5%;
		}
	}
	.hide-from-md {
		@include respond-from(md) {
			display: none !important;
		}
	}	
	.hide-to-md {
		@include respond-to(md) {
			display: none !important;
		}
	}
	.hide-to-lg {
		@include respond-to(lg) {
			display: none !important;
		}
	}
}